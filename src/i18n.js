import i18n from "i18next";
import { initReactI18next } from "react-i18next";
import HttpBackend from "i18next-http-backend";
import LanguageDetector from "i18next-browser-languagedetector";

// üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è i18next
i18n
  .use(HttpBackend) // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø–æ HTTP
  .use(LanguageDetector) // –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞
  .use(initReactI18next) // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ react-i18next
  .init({
    fallbackLng: "uk", // –Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    supportedLngs: ["uk", "en", "ru"],

    debug: process.env.NODE_ENV === "development",

    detection: {
      order: ["localStorage", "navigator", "htmlTag", "cookie"],
      caches: ["localStorage"],
    },

    backend: {
      // üîΩ –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª—ã translation.json –ª–µ–∂–∞—Ç –≤ /public/locales/{{lng}}/
      loadPath: "/locales/{{lng}}/translation.json",
    },

    interpolation: {
      escapeValue: false, // React —É–∂–µ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç
    },

    react: {
      useSuspense: true, // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç fallback –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    },
  });

// ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ <html lang="...">
i18n.on("languageChanged", (lng) => {
  if (typeof document !== "undefined") {
    document.documentElement.setAttribute("lang", lng);
  }
});

export default i18n;
