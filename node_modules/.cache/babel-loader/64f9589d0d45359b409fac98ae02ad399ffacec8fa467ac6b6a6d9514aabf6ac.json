{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\promelektroservice-react-structure\\\\src\\\\pages\\\\ReviewsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewsPage() {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const querySnapshot = await getDocs(collection(db, \"reviews\"));\n      const reviewsData = querySnapshot.docs.map(doc => doc.data());\n      setReviews(reviewsData);\n    };\n    fetchReviews();\n  }, []);\n  const handleSubmit = async () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (inputValue.trim() && name.trim() && email.trim() && emailRegex.test(email)) {\n      const newReview = {\n        text: inputValue.trim(),\n        name,\n        email\n      };\n      await addDoc(collection(db, \"reviews\"), newReview);\n      setReviews(prev => [...prev, newReview]);\n      setInputValue(\"\");\n      setName(\"\");\n      setEmail(\"\");\n    } else {\n      alert(\"Будь ласка, заповніть всі поля коректно.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"page-with-footer\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0456\\u0434\\u0433\\u0443\\u043A\\u0438 \\u043A\\u043B\\u0456\\u0454\\u043D\\u0442\\u0456\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0456\\u043C\\u2019\\u044F\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"\\u0412\\u0430\\u0448 email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u0432\\u0456\\u0434\\u0433\\u0443\\u043A...\",\n        className: \"review-textarea\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleSubmit,\n          children: \"\\u041D\\u0430\\u0434\\u0456\\u0441\\u043B\\u0430\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviews-list\",\n        children: reviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: review.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 18\n            }, this), \" (\", review.email, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: review.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewsPage, \"lK+90Hu26NjGvF4t9CqPbRDmyHA=\");\n_c = ReviewsPage;\nexport default ReviewsPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewsPage\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","addDoc","getDocs","jsxDEV","_jsxDEV","ReviewsPage","_s","reviews","setReviews","inputValue","setInputValue","name","setName","email","setEmail","fetchReviews","querySnapshot","reviewsData","docs","map","doc","data","handleSubmit","emailRegex","trim","test","newReview","text","prev","alert","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","style","textAlign","onClick","review","index","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/promelektroservice-react-structure/src/pages/ReviewsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\n\nfunction ReviewsPage() {\n  const [reviews, setReviews] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const querySnapshot = await getDocs(collection(db, \"reviews\"));\n      const reviewsData = querySnapshot.docs.map(doc => doc.data());\n      setReviews(reviewsData);\n    };\n    fetchReviews();\n  }, []);\n\n  const handleSubmit = async () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (inputValue.trim() && name.trim() && email.trim() && emailRegex.test(email)) {\n      const newReview = { text: inputValue.trim(), name, email };\n      await addDoc(collection(db, \"reviews\"), newReview);\n      setReviews(prev => [...prev, newReview]);\n      setInputValue(\"\");\n      setName(\"\");\n      setEmail(\"\");\n    } else {\n      alert(\"Будь ласка, заповніть всі поля коректно.\");\n    }\n  };\n\n  return (\n    <main className=\"page-with-footer\">\n      <section id=\"reviews\">\n        <h2>Відгуки клієнтів</h2>\n        <input type=\"text\" placeholder=\"Ваше ім’я\" value={name} onChange={(e) => setName(e.target.value)} required />\n        <input type=\"email\" placeholder=\"Ваш email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n        <textarea\n          placeholder=\"Напишіть свій відгук...\"\n          className=\"review-textarea\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        ></textarea>\n        <div style={{ textAlign: \"center\" }}>\n          <button className=\"btn\" onClick={handleSubmit}>Надіслати</button>\n        </div>\n        <div className=\"reviews-list\">\n          {reviews.map((review, index) => (\n            <div key={index} className=\"review-item\">\n              <p><strong>{review.name}</strong> ({review.email})</p>\n              <p>{review.text}</p>\n            </div>\n          ))}\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default ReviewsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}